@model PagedList.IPagedList<SiegeNut.Models.Review>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}

@section Header {
    <h1>Reviews</h1>
}

@section List {
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-lg btn-create" })

    <div class="row search-row">
        @using (Html.BeginForm("Index", "Reviews", FormMethod.Get))
        {
            <div class="col-lg-6 hidden-sm hidden-xs">
                <div class="input-group input-group-lg">
                    <span class="input-group-btn">
                        @Html.DropDownList("searchField", new List<SelectListItem>
    {
                        new SelectListItem() {Text = "Search By", Value="", Selected=true},
                        new SelectListItem() {Text = "Product", Value="Product"},
                        new SelectListItem() {Text = "Rating", Value="Rating"},
                        new SelectListItem() {Text = "Author", Value="Author"}
    }, new { @class = "btn" })
                    </span>
                    @Html.TextBox("SearchString", ViewBag.CurrentSearch as string, new { @class = "form-control" })
                    <span class="input-group-btn">
                        <input type="submit" class="btn btn-default btn-lg" value="Search" />
                    </span>
                </div>
            </div>
        }
        <div class="col-lg-6">
            <div class="btn-group btn-group-lg pull-right">
                @Html.ActionLink("Product", "Index", new { sortOrder = ViewBag.ProductSortParm, currentSearch = ViewBag.CurrentSearch, currentField = ViewBag.CurrentField }, new { @class = "btn btn-default" })
                @Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSortParm, currentSearch = ViewBag.CurrentSearch, currentField = ViewBag.CurrentField }, new { @class = "btn btn-default" })
                @Html.ActionLink("Author", "Index", new { sortOrder = ViewBag.AuthorSortParm, currentSearch = ViewBag.CurrentSearch, currentField = ViewBag.CurrentField }, new { @class = "btn btn-default" })
                @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentSearch = ViewBag.CurrentSearch, currentField = ViewBag.CurrentField }, new { @class = "btn btn-default" })
            </div>
        </div>
    </div>
    @foreach (var item in Model)
    {
        <div class="row item">
            <div class="col-md-12">
                <strong>@Html.DisplayFor(modelItem => item.Product.Name)</strong>
            </div>
            <div class="col-md-12">
                <strong>@Html.DisplayNameFor(model => item.Rating):</strong>
                @Html.DisplayFor(modelItem => item.Rating)
            </div>
            <div class="col-md-12">
                <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
            </div>
            <div class="col-md-12">
                <strong>@Html.DisplayFor(modelItem => item.Author.UserName)</strong> on
                @item.DateWritten.ToString("MMM dd, yyyy")
            </div>
            <div class="col-md-12">
                @Html.DisplayFor(modelItem => item.MainText)
            </div>
            <div class="col-md-12">
                @Html.ActionLink("Details", "Details", new { id = item.ID }, new { @class = "btn" })
                @if (ViewBag.CurrentUser == item.AuthorID)
                {
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }, new { @class = "btn" })
                @Html.ActionLink("Delete", "Delete", new { id = item.ID }, new { @class = "btn" })
                }
            </div>
        </div>
    }
    <div class="page-box text-right">
        <p class="text-center">Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>
            @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentSearch = ViewBag.CurrentSearch }))
    </div>
}